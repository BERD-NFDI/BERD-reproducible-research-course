[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BERD Course Booklet: Make Your Research Reproducible",
    "section": "",
    "text": "This course booklet is part of the BERD Academy and was created in 2023.\n\nOverview\nThis booklet helps you implement impactful steps in making your research reproducible (and open).\nMaking your work reproducible may seem daunting right now, but we‚Äôll take it step by step and you can choose what you want to implement now and what you want to keep for later. This is a process and there is no need to take all the steps at once. Let‚Äôs just try to move towards reproducible on the reproducibility scale.\n\n\n\n\nReproducibility scale\n\n\n\n\n\n\n\n\n\nReuse\n\n\n\nIf you want to reuse the course materials, you are welcome to do so. Please review our license information.\nYou can find the booklet source on GitHub."
  },
  {
    "objectID": "intro.html#course-format",
    "href": "intro.html#course-format",
    "title": "Introduction",
    "section": "Course format",
    "text": "Course format\nThis is an online course. Each week you will..\n\nwatch the weekly videos (~45 min),\nreview one of the booklet chapters,\nhave a short session with your accountability buddy (15-20 minutes),\nimplement the tasks of the week, and\ndiscuss your progress in the weekly online meeting with the instructor and fellow course participants (1-1.5 hours).\n\nYou will choose your accountability buddy during the course. You and your buddy will help each other in implementing the tasks of each week.\nWeekly Meetings:\n\nTuesday, October 17, 3 pm ‚Äì 4:30 pm CET\nTuesday, October 24, 3 pm ‚Äì 4:30 pm CET\nTuesday, October 31, NO MEETING but self-paced learning\nTuesday, November 7, 3 pm ‚Äì 4:30 pm CET\nTuesday, November 14, 3 pm ‚Äì 4:30 pm CET"
  },
  {
    "objectID": "1-reproducible-research.html",
    "href": "1-reproducible-research.html",
    "title": "Reproducible research and how to get there",
    "section": "",
    "text": "Learning targets\n\n\n\n\nYou will know what reproducibility is, what the hurdles are, and why it is important for research.\nYou will know about the FAIR data principles and be able to discuss the issues in implementing them.\nYou will be able to discuss the complexity of collaboration in research and communicating and working more effectively is important for good research.\n\n\n\n\n\n\n\n\n\nTasks\n\n\n\nRead this chapter and watch this week‚Äôs videos. Afterwards go through the following assignments:\n\nWhat questions came up for you while watching the videos and going through the booklet?\nWhat are your personal hurdles for reproducible research? What can you do to address them?\nWhat are hurdles for you in producing FAIR data? What can you do for the data you work with?\nWhich of the points in the 8 steps for Planning a Community does your research team already check off? Which should be discussed? If possible, bring open points to your team meeting.\n\nBring any questions and problems that come up to the weekly meeting."
  },
  {
    "objectID": "1-1-what-is-reproducible-research.html",
    "href": "1-1-what-is-reproducible-research.html",
    "title": "1¬† What is reproducible research?",
    "section": "",
    "text": "A popular definition of reproducibility comes from The Turing Way Book:\n\nAt The Turing Way, we define reproducible research as work that can be independently recreated from the same data and the same code that the original team used. Reproducible is distinct from replicable, robust and generalisable as described in the figure below.\n\n\n\n\n\nMatrix defining reproducible research (from The Turing Way)"
  },
  {
    "objectID": "1-2-hurdles.html",
    "href": "1-2-hurdles.html",
    "title": "2¬† Hurdles: reproducible research is hard",
    "section": "",
    "text": "From the definition above, reproducible research sounds really easy. It is a minimum standard. But still it is hard!\nCommon hurdles that researchers face are:\n\nMissing knowledge (What am I allowed to do? How to do it?)\nShame and fear\nTime pressure\nData/code that cannot be shared openly\n\nWhat are your personal hurdles? What can you do to address them?"
  },
  {
    "objectID": "1-3-fair.html",
    "href": "1-3-fair.html",
    "title": "3¬† FAIR principles for reproducible research",
    "section": "",
    "text": "FAIR stands for Findable, Accessible, Interoperable and Reusable. Implementing the FAIR principles for data can be a challenge though. Let‚Äôs talk about how to do it in practice.\n\nThe FAIR principles are at the core of many current initiatives in research and beyond. For example the German National Research Data Infrastructure (NFDI) consortia are working on making research data (and sometimes software) FAIR. There is even a special FAIR Data Spaces project. But what does FAIR mean for you?\n\n\n\n\nFAIR prinicples\n\n\n\nThis chapter is based on ressources from the University of Mannheim, that I recommend to check out: https://github.com/UB-Mannheim/FAIR-Data-Week. In the following I will use these and my own experience to give you a bit of a guidance on how to get started.\n\nWhat are the FAIR principles for?\nThe FAIR principles try to help you answer the most common questions people have about data.\n\n\n\n\nFAIR questions\n\n\n\nBy the way, ‚Äúdata‚Äù in this context can mean many different things. Of course things like regular tabular data sets, but also images and other research materials.\n\n\nHow to get started\nStore your data somewhere that makes sense. If you can make your data openly available regular data platforms such as Zenodo or the Open Science Framework (OSF) will do. Of course also field specific or institutional platforms/repositories are good options.\n\n\n\nView the images of this chapter on Zenodo\n\n\nIf you cannot make them openly available, you can usually still make the metadata available. Metadata is information about your data such as the author(s), how to cite it, what the data set contains, and so on.\nMaking your data known in the community increases not only your chance of creating an impact with your work but also your work‚Äôs FAIRness. You can do so by publishing a data paper or otherwise sharing more info with the community (social media, podcasts, conferences, ‚Ä¶).\nAnd then additionally‚Ä¶\n\n\nF for Findable\n(Three ingredients: data, metadata and infrastructure)\n\nAttach a DOI to your data. Many data platforms (e.g.¬†Zenodo) make that really easy for you.\nProvide rich machine-readable metadata. If you upload your data to a good data platform, the most relevant metadata will be asked from you anyhow. So it‚Äôs easy to do things right.\n\n\n\nA for Accessible\n(FAIR is not the same as Open üëâ the point is to provide the exact conditions of accessibility)\n\nExplain how someone can access your data. May that be via accessing it through a data platform or through an application that is evaluated by a data-use-and-access committee.\n\n\n\nI for Interoperable\n\nUse common data formats. For tabular data that could for example be csv, for images jpeg. What‚Äôs best in your community might be decided through a community standard.\nUse words that others will understand or define them. For example if the column names in your table are not self explanatory, explain them.\nProvide context for your data. Is it connected with other data or papers? You can also add your metadata to public knowledge graphs, e.g.¬†Wikidata.\n\n\n\nR for Reusable\n\nInclude rich machine-readable metadata according to the community standards.\nAttach a license to your data (license is part of the metadata) that makes it clear, what others can do with your data. You can for example use the Creative Commons license CC-BY (more on how to choose a license)."
  },
  {
    "objectID": "1-4-team-work.html",
    "href": "1-4-team-work.html",
    "title": "4¬† Team work that fosters reproducibility",
    "section": "",
    "text": "Research is increasingly being conducted in teams. The bigger and more complex the team, the more complicated it can be to work in a reproducible fashion. Thinking about how to set up a team to foster reproducibility is essential, because a bigger team can also mean that reproducibility becomes easier. If the whole team works together, their diverse skills will help in creating a thriving and reproducible research project.\nIn The Turing Way‚Äôs Guide to Planning a Community they discuss 8 steps, that work well for a broad range of research teams:\n\nChoose a Communication Platform (e.g.¬†GitHub + Chat + Website)\nProvide a Project Summary File (e.g.¬†README.md)\nSelect a Code of Conduct\nProvide Contribution Guidelines and Interaction Pathways\nCreate a Basic Management/Leadership Structure (roles)\nProvide Contact Details Wherever Useful (email address to role)\nIdentify Failed Approaches, and Stop Them\nHave Documentation (e.g.¬†a wiki) and Dissemination Plans for Your Project (e.g.¬†publication on Zenodo)\n\nNote that there are two important parts fo thriving teams:\n\nDocuments (wiki, checklist, ‚Ä¶)\nRoles of people (research software engineer, welcome team, ‚Ä¶)\n\nHow is your team set up? Which of the 8 steps are unclear to you?"
  },
  {
    "objectID": "2-project-organization.html",
    "href": "2-project-organization.html",
    "title": "Get your research project organized",
    "section": "",
    "text": "Learning targets\n\n\n\n\nYou will be able to create a sensible folder structure for your research projects.\nYou will be able to use good names for files, folders, functions, ‚Ä¶\nYou will have a good understanding of documentation requirements for your research project.\n\n\n\n\n\n\n\n\n\nTasks\n\n\n\nRead this chapter and watch this week‚Äôs videos. Afterwards go through the following assignments:\n\nCreate a folder structure template that would work for most of your projects. If possible, discuss it with your team.\nFor your current project, implement the organization and documentation practices that you learned about. Write down questions that come up in the process.\n\nDiscuss your progress with your accountability buddy. Bring any questions and problems that you cannot solve with your buddy to the weekly meeting."
  },
  {
    "objectID": "2-1-naming.html",
    "href": "2-1-naming.html",
    "title": "5¬† Naming things",
    "section": "",
    "text": "This chapter shows you how to pick good names.\nGood names for files, folders, functions and other things can make a research project (or any project on your computer, really) more pleasant. Both for yourself and any people you work with.\nLet‚Äôs be kind to ourselves and the people around us and get into naming üôå!\nA few examples from Jenny Brian‚Äôs slides of bad and good file names:\n\nBAD ‚ùå\n\nMyabstract.docx\nJoe‚Äôs Filenames Use Spaces and Punctuation.xlsx\nfigure 1.png\nfig 2.png\nJW7d^(2sl@deletethisandyourcareerisoverWx2*.txt\n\nGOOD ‚úÖ\n\n2014-06-08_abstract-for-sla.docx\nJoes-filenames-are-getting-better.xlsx\nFig01_scatterplot-talk-length-vs-interest.png\nFig02_histogram-talk-attendance.png\n1986-01-28_raw-data-from-challenger-o-rings.txt\n\n\nNames should be:\n\nMachine readable üíª\nHuman readable üßê\nOptional: Consistent ‚öôÔ∏è (decide how you use underscores _ and dashes -, if you want to use CamelCase or not, ‚Ä¶)\nOptional: Play well with default ordering ‚¨á (e.g.¬†start your file names with the creation date YYYY-MM-DD)\n\n\nFurther reading\n\nNaming files, folders and other things, The Turing Way\nProject structure slides, Danielle Navarro\nFile naming slides, Jenny Brian\nISO 8601, a standard for dates, Wikipedia"
  },
  {
    "objectID": "2-2-organisation.html",
    "href": "2-2-organisation.html",
    "title": "6¬† File and folder organization",
    "section": "",
    "text": "My first research project was a mess üôà. I had hundreds of files with dubious file names and sometimes several files with similar code written for computing on different infrastructures (my computer, the institute server, the cluster of the computing facility).\nI felt like the worst researcher of all times. But I wasn‚Äôt. Many struggle with organizing their files and folders in increasingly complex research projects.\n\n\nHow to organize files and folders well?\nIt basically comes down to structuring folders and files systematically from the beginning.\nThink about what a good folder structure could be for your research project. A standard project of mine looks something like this:\n.\n‚îú‚îÄ‚îÄ analysis            &lt;- all things data analysis\n‚îÇ   ‚îî‚îÄ‚îÄ src             &lt;- functions and other source files\n‚îú‚îÄ‚îÄ comm\n‚îÇ   ‚îú‚îÄ‚îÄ internal_comm   &lt;- internal communication such as meeting notes\n‚îÇ   ‚îî‚îÄ‚îÄ journal_comm    &lt;- communication with the journal, e.g. peer review\n‚îú‚îÄ‚îÄ data\n‚îÇ   ‚îú‚îÄ‚îÄ data_clean      &lt;- clean version of the data\n‚îÇ   ‚îî‚îÄ‚îÄ data_raw        &lt;- raw data (don't touch)\n‚îú‚îÄ‚îÄ dissemination\n‚îÇ   ‚îú‚îÄ‚îÄ manuscripts\n‚îÇ   ‚îú‚îÄ‚îÄ posters\n‚îÇ   ‚îî‚îÄ‚îÄ presentations\n‚îú‚îÄ‚îÄ documentation       &lt;- documentation, e.g. data management plan\n‚îî‚îÄ‚îÄ misc                &lt;- miscellaneous files that don't fit elsewhere\nYou can download this folder structure as a template from https://github.com/HeidiSeibold/research-project-template.\nNot every project is the same and likely your project will be more complex than this. But if you think about good organization from the beginning, it will be easier in the long run.\nWhat do you think about file or folder organization? Is your folder structure similar to mine?\n\n\nFurther reading\n\nResearch Compendia, The Turing Way\nTowards a Standardized Research Folder Structure, GenR blog\nFolder structure of R packages, Making Packages in R, Software Carpentry\nResearch Project Template, Heidi Seibold\nData Analysis Project Template, a group of R users"
  },
  {
    "objectID": "2-3-documentation.html",
    "href": "2-3-documentation.html",
    "title": "7¬† Documentation",
    "section": "",
    "text": "In this chapter we discuss research documentation for reproducible research.\nHow can I document my research outputs?\nThere is actually no super-clear catch all answer to this question. It really depends on your needs, on your audience as well as on the types of research outputs you generate. In the following you find a few ideas to start from.\n\nDocumenting research projects\nOne thing that I always do is to add a README-Text-File to each project. In the README I write the most important info about the project: What is it about? Who is involved? Where to find files? How to cite it? Where to find the paper? ‚Ä¶\nAs an example, check out my project on personalised medicine.\nFor more complex research projects, you can create a whole wiki or similar to describe the project. For most projects a README will be just fine.\n\n\n\nDocumenting data\nMetadata is central to documentation of data. Metadata is information about your data. It‚Äôs information on the license of the data, who owns it, what information the data contain, ‚Ä¶ so essential data documentation.\nMany research fields have standards for metadata. If you can‚Äôt find one for your field you can use a common standard (e.g.¬†Dublin Core) or just ask a data manager or librarian at your institution. You can write metadata similar to a README (see e.g.¬†this guide from Cornell University). If you upload your data to a data platform (e.g.¬†Dryad) you won‚Äôt have to think about it as the platform usually takes care of that (Dryad uses Dublin Core).\n\n\n\nDocumenting code\nTo make my code as understandable as possible for others, I use literate programming (mixing text and code to make it easier to read, e.g.¬†Quarto) or add clear code comments. When writing functions in R I additionally use the standardized way to document R functions (via Roxygen2).\nAn example of code comments in R (##):\n\n## Load package + data\nlibrary(\"model4you\")\ndata(\"MathExam14W\", package = \"psychotools\")\n\n## scale points achieved to [0, 100] percent\nMathExam14W$tests &lt;- 100 * MathExam14W$tests/26\nMathExam14W$pcorrect &lt;- 100 * MathExam14W$nsolved/13\n\n## select variables to be used\nMathExam &lt;- MathExam14W[ , c(\"pcorrect\", \"group\", \"tests\", \"study\",\n                             \"attempt\", \"semester\", \"gender\")]\n\n\n\n\nDocumenting other things\nWhatever you work on, there might be parts of your research project that are difficult to understand. Say you work in a lab, then your documentation is a lab notebook. Or you do interviews, then your documentation may be your interview strategy. Anything that might be useful for others is worth keeping and worth sharing. After all, we all want to build on the work of others in order to make the world a little better.\n\n\nFurther reading\nWant to learn more? Check out:\n\nLanding Page - README file, The Turing Way\nA beginner‚Äôs guide to writing documentation, Write The Docs\nR Markdown: The Definitive Guide, Yihui Xie, J. J. Allaire, Garrett Grolemund\nknitr - Elegant, flexible, and fast dynamic report generation with R, Yihui Xie\nGuide to writing ‚Äúreadme‚Äù style metadata, research data management service group, Cornell University"
  },
  {
    "objectID": "3-computational-workflows.html",
    "href": "3-computational-workflows.html",
    "title": "Computational workflows",
    "section": "",
    "text": "Learning targets\n\n\n\n\nYou will have the version control system git installed on your computer and be able to run the important commands.\nYou will be able to keep your computing environment stable.\nYou will have a roadmap on how to automate your code.\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nThis week‚Äôs assignments are a bit more difficult and will take longer to implement that the previous. Please plan for this.\n\n\n\n\n\n\n\n\nTasks\n\n\n\nRead this chapter and watch this week‚Äôs videos. Afterwards go through the following assignments:\n\nInstall git: For R users, I recommend following these instructions. Otherwise the Carpentries have good instructions for all systems (follow along until end of 2. Setting up Git)\nCreate a project on GitLab (or GitHub). Then clone it, edit a file, add, commit, and push your changes.\nView the open issues for our course booklet and choose one where you can make a contribution. Create a merge request with your contribution and mark it in the respective issue.\nOptional: try using Make to automate something in your current research project.\n\nDiscuss your progress with your accountability buddy. Bring any questions and problems that you cannot solve with your buddy to the weekly meeting."
  },
  {
    "objectID": "3-1-pipeline.html",
    "href": "3-1-pipeline.html",
    "title": "8¬† The workflow as a pipeline",
    "section": "",
    "text": "This chapter is about turning your research project into a well organised pipeline.\n\n\n\n\nResearch pipeline"
  },
  {
    "objectID": "3-2-version-control.html",
    "href": "3-2-version-control.html",
    "title": "9¬† Version control",
    "section": "",
    "text": "Version control systems can help us stay on top of our complex research projects, and in particular on changes in code and text. Version control can help with reproducibility in several ways.\n\nWhat is version control?\nLet‚Äôs say you are writing a paper. You will edit your paper and might want to keep different versions of it. A common way to handle that is by using different file names for different versions.\n\n\n\n\nhttp://www.phdcomics.com/comics/archive/phd101212s.gif\n\n\n\nThis way of ‚Äúversion control‚Äù is outdated and error-prone (hence the pixelated image üòú). The most common proper version control system today is Git, which I‚Äôd like to introduce to you now.\n\n\nGit for version control\n\nGit is free and open source üòÉüôå.\nWith Git you can track different versions of your paper. For each version you can add a description (‚Äúcommit message‚Äù) and you even automatically track who made which change if you are working in a group. You can always go back to old versions.\nThe way you work with Git is that you have the version database both on our computers and on a server. To get the changes from and to the server you use commands (pull = download stuff from server, push = upload stuff to server).\n\n\n\nMost researchers use GitLab or GitHub as platforms for working with Git and they also serve as a neat front end for the server. GitLab and GitHub give us some extra neat features for collaboration (e.g.¬†issues, Wiki, ‚Ä¶).\nLearning Git can be daunting üôÄ. Historically it was developed by software engineers for other software engineers. That makes it particularly useful for us when writing code, but it can also feel a bit too nerdy in the beginning. I promise though, once you‚Äôve got the hang of it, you‚Äôll love it!\n\n\nInstall git on your computer üíª\n\nDepending on the system you are working on, there are different ways to install git.\nFor the latest stable version for Linux Ubuntu run this command in your terminal:\napt-get install git\nIf you are on Mac you can use homebrew to install it in your terminal. Install homebrew if you don‚Äôt already have it, then type:\nbrew install git\nIf you are working on Windows, I recommend installing Git Bash. This provides you with a terminal where you can work similarly to the terminal on Mac and Linux, using the same commands. Git Bash also automatically installs Git for you. You can download Git for Windows here.\nYou can visit git-scm.com to get more information on how you can download git for your system.\nFor R users, I recommend following these instructions (up to ‚ÄúTest Installation‚Äù as we will use GitHub instead of GitLab in the following).\n\n\nCreate a new Repository on GitHub\nSign in to GitHub:\nOpen your browser, go to GitHub, and sign in to your GitHub account. If you don‚Äôt have an account, you can create one by clicking on the ‚ÄúSign up for GitHub‚Äù button.\nCreate a New Repository:\nIn the upper-right corner of any page, click on the + icon and select ‚ÄúNew repository.‚Äù Alternatively, on your GitHub profile page, click on the ‚ÄúRepositories‚Äù tab, and then click the green ‚ÄúNew‚Äù button.\nFill out the Repository Information:\n\nEnter a Repository name: Choose a name for your repository. This name will be part of your repository‚Äôs URL.\nEnter a Description: Optionally, you can add a description of your repository.\nChoose Public or Private: Decide whether you want your repository to be public (visible to everyone) or private (accessible only to people you specify).\nInitialize this repository with a README: Check this option to create a README file for your repository. A README file provides information about your project.\nChoose a .gitignore file: If your project involves specific programming languages or frameworks, you can select a .gitignore template to exclude certain files from version control. You don‚Äôt have to it for now.\nChoose a license: If you want to add an open-source license to your repository, you can choose one from the provided options. You don‚Äôt have to it for now.\n\nCreate the Repository: - Click the green ‚ÄúCreate repository‚Äù button. Your new repository is now created.\n\n\nClone a GitHub Repository to your local machine\nI will show you how to clone a repository with ssh key. When you are on Github in your repository and select the green button &lt;&gt; code, you can choose https or ssh under the cloning points. If you choose https you have to identify yourself later with your GitHub password. The SSH key is another authentication method that is more secure in comparison. If you want to know how to create an SSH key pair, check here.\nClone GitHub Repository with SSH URL:\nOpen the terminal on your computer.\nUse the git clone command with the SSH URL of your GitHub repository to clone your repository to your local machine:\ngit clone git@github.com:username/repository.git\nMake sure to replace username with your GitHub username and repository with your repository name.\nNavigate into the newly created directory:\ncd repository\nMake Changes:\nAdd files, modify existing files, or create new files in your local repository as needed.\nCheck Status and Stage Changes:\nCheck the status of your repository to see which files have been changed:\ngit status\nStage the changed files:\ngit add .\nCommit Changes:\nCommit the changes with a descriptive message:\ngit commit -m \"Description of the changes made\"\nReplace \"Description of the changes made\" with a brief description of the changes you made.\nPush Changes to GitHub:\nPush your changes to your GitHub repository:\ngit push origin main\nAfter this step is successful, your changes are published to your GitHub repository! üéâ\n\n\nOther version control systems\nThere are many other ways of doing version control out there.\nSubversion: Simpler systems like Subversion are used less these days as Git offers more flexibility.\nGoogle docs and friends: Many online text editors (Google Docs, OneDrive, ‚Ä¶) offer versioning now. It is not as advanced and versatile, but a nice way to work in a WYSIWYG (What You See Is What You Get) editor. Git really only works with real text files, so people usually use LaTeX or Markdown (not WYSIWYG) to write texts when using Git.\nVersioning data: Version control of data is a difficult task. Let‚Äôs leave that for another day. See here for more info for now.\n\n\nFurther reading\n\nVersion Control, The Turing Way\nVersion Control with Git, Software Carpentry\nVersion Control with Git (for R users), Anna Krystalli\nSet up Git with RStudio & GitLab, Heidi Seibold"
  },
  {
    "objectID": "3-3-stabilize.html",
    "href": "3-3-stabilize.html",
    "title": "10¬† Stabilize your computing environment and software",
    "section": "",
    "text": "This topic may sound technical and boring at first, but please bare with me üôè. It will be useful!\nHave you ever had the problem that you ran an old code and it just did not work anymore? After hours of digging into the issue you find that it‚Äôs because the software package you use has changed in the meantime üßê\nOr have you tried to reproduce someone else‚Äôs code, which seems to run on their machine but not on yours and you just don‚Äôt know why.\nThis chapter is all about avoiding such problems in the future by stabilizing your computing environment and software. ‚úÖ\n\nWhat is a computing environment?\nYour computing environment is defined by your computer, the operating system and the software installed. If you update your operating system or your software, your computing environment changes. In R, for example, you can learn a lot about your computing environment by typing sessionInfo().\n\nsessionInfo()\n\nR version 4.2.0 (2022-04-22)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3\nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nloaded via a namespace (and not attached):\n [1] compiler_4.2.0  fastmap_1.1.1   cli_3.6.1       htmltools_0.5.5\n [5] tools_4.2.0     yaml_2.3.7      rmarkdown_2.21  knitr_1.42     \n [9] jsonlite_1.8.4  xfun_0.39       digest_0.6.31   rlang_1.1.1    \n[13] renv_1.0.0      evaluate_0.20  \n\n\nIt tells the R version, operating system, loaded R packages as well as their versions.\n\n\nOptions for stabilizing your computing environment\n\n1) Record your computing environment\nDocument the software versions you used. For example if you use R, you could copy the output of sessionInfo() into your README or somewhere else where future you (and others) can find this information. This is not exactly ‚Äústabilizing‚Äù but it gives the possibility to install the same software versions again.\n\n\n2) Use one virtual machine per research project\nYou don‚Äôt need to know what a virtual machine is or how to set it up to be able to do this. I used to ask the wonderful IT person at my institute to set up a virtual machine for me and if your IT supporters know their job, they‚Äôll be able to help you here.\nA virtual machine is essentially a virtual computer on another computer or server (To those nerds out there, I know I am probably explaining it incorrectly but for the purpose of what we want to achieve here, it‚Äôs good enough). If you have one virtual machine for each project, you can keep the computing environment stable by not installing or updating software after you‚Äôve finished the research project.\nThe downside of this strategy is that this is only for future you and your collaborators, but not for other researchers who want to work with the same computing environment.\n\n\n3) Use one container per research project\nContainers are similar to virtual machines (think little computer inside your computer). The big difference is that you can make them available for others. So you can send your container image (or the file describing it) to others.\n\n\n\nPopular container tools are Docker and Apptainer (formerly Singularity). Learning to work with containers is not super easy, but it is worth the time and actually can be applied in so many other situations. So, a great skill to have even if you decide to quit research.\n\n\n4) Other\nThere are many other options out there. I wrote down the three that are least dependent on the actual software you use. For R users, check out packages logrx, rang, packrat, versions, and renv.\n\n\n\nFurther reading\n\nReproducible Environments, The Turing Way\nVideo: How can software containers help your research?, Paula Andrea Martinez + Australian Research Data Commons\nR Docker tutorial, maintained by Jemma Stachelek\n\nThat‚Äôs all for this chapter. I hope it was helpful and not too technical. Happy researching! üôå"
  },
  {
    "objectID": "3-4-automate.html",
    "href": "3-4-automate.html",
    "title": "11¬† Automate your code",
    "section": "",
    "text": "Research projects that deal with data and code can be imagined as a pipeline. Data comes in at certain points and then they are processed in several steps. We do some data cleaning, an overview of the data, create figures, do some modelling with the data (simulation, statistics, machine learning, etc.) and in the end we write some text (usually a paper).\n\n\n\n\nResearch pipeline\n\n\n\nOf course, this is a simplified view of what really happens. Most research projects are quite complex and it is really hard to keep track of everything. What data should be used for which analysis? What code should be used for what?\n\n\n\n\nResearch pipeline (more realistic)\n\n\n\nGood organisation and version control help us tremendously to keep track of all the complexity. But what if the pipes of our pipeline would stick together nicely and we would not have to execute everything manually? What if we could automate stuff? Well, we can!\n\nMake for automation\nThere are many automation tools out there that researchers use for their research pipelines. The probably oldest among them is called Make. It is not only old, but still very functional, useful, and versatile.\n\nA simple example\nLet‚Äôs say we work on a project and have the following folders and files:\n\n\nmake-example\n‚îú‚îÄ‚îÄ Makefile\n‚îú‚îÄ‚îÄ PlantGrowth_new.csv\n‚îú‚îÄ‚îÄ boxplot_weight-group.png\n‚îú‚îÄ‚îÄ data_clean\n‚îÇ¬†¬† ‚îî‚îÄ‚îÄ PlantGrowth_new.csv\n‚îú‚îÄ‚îÄ data_raw\n‚îÇ¬†¬† ‚îî‚îÄ‚îÄ PlantGrowth.csv\n‚îú‚îÄ‚îÄ overview.R\n‚îî‚îÄ‚îÄ preprocess.R\n\n2 directories, 7 files\n\n\nSee also here for all files and folders in this example project.\nIn this project, we want to work with data from an experiment to compare yields (as measured by dried weight of plants) obtained under a control and two different treatment conditions (see also Dobson, A. J., 1983, An Introduction to Statistical Modelling. London: Chapman and Hall).\nHere is an example Makefile, that could be used by an R user to create:\n\nA preprocessed (clean) version of the plant growth data.\nA figure (boxplot) of weight by group. \n\n\n\nMakefile\n\ndata_clean/PlantGrowth_new.csv: data_raw/PlantGrowth.csv preprocess.R\n    Rscript preprocess.R\n\nboxplot_weight-group.png: data_clean/PlantGrowth_new.csv overview.R\n    Rscript overview.R\n\nall: boxplot_weight-group.png\n\n\n\nMakefile structure\nHow does this Makefile work. A rule in Make consists of three components:\n\nThe target: What do I want to generate?\nThe dependencies: What files are needed to generate the target?\nThe code: What code needs to run to generate the target from the dependencies?\n\n\n\nSchematic Makefile\n\ntarget: dependency1 dependency2\n    code to create target from dependencies\n\nThe structure is always the same: 1. The target is before the ‚Äú:‚Äù in line 1. 2. The dependencies are after the ‚Äú:‚Äù in line 1. 3. The code is in line 2 and indented by a tab.\nKeeping the structure this way is crucial for the Makefile to run properly.\n\n\nRunning Make\nMake runs in the terminal/console. To generate your target, you run:\nmake target\nso for our example that would be\nmake data_clean/PlantGrowth_new.csv\nto generate the clean data or\nmake boxplot_weight-group.png\nto generate the boxplot.\nYou may have noticed that the Makefile for our project also contains a target called all. We use that in longer Makefiles to indicate what needs to be done to create all targets.\nIn our case, all targets are generated by generating boxplot_weight-group.png, because boxplot_weight-group.png depends on our other target data_clean/PlantGrowth_new.csv and thus Make automatically knows to generate data_clean/PlantGrowth_new.csv (if needed) when running\nmake all\nIf needed? Yes. Make only runs the code, if the dependencies of the target have changed since the code was run the last time. This is a particularly useful thing if you have long running computations and want to still ensure that everything gets updated if needed.\n\n\n\nFurther reading\nWe just showed a very simple example in this chapter. Make can become much more complex and versatile. Check out the following ressources if you‚Äôd like to dive deeper:\n\nMake, The Turing Way\nAutomating data-analysis pipelines, STAT 454 for R users"
  },
  {
    "objectID": "4-publishing-research.html",
    "href": "4-publishing-research.html",
    "title": "Publishing research outputs",
    "section": "",
    "text": "Learning targets\n\n\n\n\nYou will know about licenses.\nYou will be able to pick the right platform to share your data.\nYou will know how to implement the FAIR principles in practice.\n\n\n\n\n\n\n\n\n\nTasks\n\n\n\nRead this chapter and watch this week‚Äôs videos. Afterwards go through the following assignments:\n\nDiscuss with your accountability buddy and/or your research team: what are good places to publish your data, code and other research outputs in your field?\nUpload something (e.g.¬†data or a slide deck) to a repository of your choice. How FAIR can you make it?\n\nDiscuss your progress with your accountability buddy. Bring any questions and problems that you cannot solve with your buddy to the weekly meeting."
  },
  {
    "objectID": "4-1-licensing.html",
    "href": "4-1-licensing.html",
    "title": "12¬† Licensing",
    "section": "",
    "text": "Reusing other researcher‚Äôs work is inherent in science. Licensing plays a central role for reuse, so we should know how it works.\n\nIn my workshops on open and reproducible research licensing often comes up as a topic of fear.\nWhat am I allowed to do? Should I better let the legal department decide? How do I avoid going to jail?\nMost of the time choosing a license is actually quite simple. So let me help you loose your fear of it! ü§ó\n\nChoosing a license for texts, data, media, ‚Ä¶\nI really like the Creative Commons licenses for most research outputs (and other things I produce, like this booklet).\nThey are easy to understand and to pick. On the CC-website you can find a simple tool to help you choose your license:\ncreativecommons.org/choose\nIn research we want to almost always use the CC-BY or CC0 license.\n\nCC0 (also known as CC0 1.0 Universal) means that the output is in the public domain and can by used by everyone for anything.\nCC-BY (also known as Attribution 4.0 International) requires the user to give credit to the creator but gives freedom on what can be done with the output. This is the license I use 90% of the time.\n\n\nWhy not non-commercial?\nCC-BY-NC is another license I often see used, but I do not like it in the context of research. Why? The ‚ÄúNC‚Äù for non-commerical prohibits commercial use for anyone but the owner. That means, for example, that educators (like me) cannot use it, if there are fees or commercial learning platforms involved. Even blogs and Wikipedia struggle with NC if there are commercial derivatives or components. Read more here.\n\n\n\nChoosing a license for software\nSoftware needs specific licenses. So for software there is another website you can use for choosing a license.\nchoosealicense.com\nAgain there is a license that works for most open projects: the MIT license.\n\n\n\n\nhttps://choosealicense.com\n\n\n\nThat seems pretty simple, right? For more complex situations and when you have to worry about license compatibility of your code with software components that you use, please check out:\n\nThe Turing Way chapter on License Compatibility\nTalk ‚ÄúAll you need to know about Software Licenses‚Äù by Tobias Schlauch\n\n\n\nOther\nFor other licenses, such as for hardware, choosealicense.com also has help for you: choosealicense.com/non-software\nI hope this short intro to licensing was helpful to you! Please note that I am not a legal expert but a self taught open science enthusiast."
  },
  {
    "objectID": "4-2-where-to-publish.html",
    "href": "4-2-where-to-publish.html",
    "title": "13¬† Where to publish",
    "section": "",
    "text": "When people write the following:\n\nThe data/code will be made available upon request.\n\nThis usually means:\n\nOnce the PhD student who wrote this paper leaves their position, the data/code will be lost in space.\n\nAm I right? But how can you do better? How can you make your research outputs available?\n\nPublish in a repository\nPublish your research outputs in a repository. You basically have three options here:\n\nA general purpose service (e.g.¬†Zenodo or Open Science Framework),\nThe service of your institution (e.g.¬†Open Data LMU or ETH Zurich‚Äôs Research Collection),\nA field or project specific service (e.g.¬†a specific repository for high throughput sequencing data or CRAN for R-Packages)\n\nA field specific service that is currently being built for the BERD community is the BERD Portal (see video).\n\nPlease make sure to use a trustworthy service. How to check if a service is trustworthy? My rule of thumb is that services that have investor backing (e.g.¬†Figshare) are less trustworthy than services backed by the research community (e.g.¬†Zenodo, which is developed by OpenAIRE and CERN). Why? Well, I think an Open Science service should not be driven primarily by commercial goals. At some point commercial services will take money from you, if that may be by selling your data, by locking your uploaded material behind a pay wall, or in another way.\n\n\nPublish with the paper\nSome journals offer to publish your research outputs with your paper. I will be honest, I have mixed feelings about this. Not all journals which offer this, really have the expertise to do so and they don‚Äôt necessarily have the possibility to store data long term. For one of my papers we uploaded the material with the journal, but the link to the material keeps vanishing and I keep getting the confused emails of interested readers. So, make sure the journal you upload your material to, ensures long term storage and availability üßê.\n\n\nIf your research outputs cannot be shared openly\nWhat should you do if you cannot publish your research outputs openly?\nIf you have sensitive data (e.g.¬†patient data) and no consent, do not publish the data! There are other options for you.\nIf for any reason you cannot share your research outputs, think of options how you can still ensure that others can trust in the reproducibility of your research.\n\nCan you maybe publish the metadata and the code?\nCan you publish a synthetic version of your data?\nCan you share the data with specific people (e.g.¬†researchers in the same field)?\n\nBrainstorm with your peers, librarians, or IT support. There are always solutions that are better than publishing nothing.\n\n\nFurther reading\n\nZenodo Guide\nHow create an OSF project"
  },
  {
    "objectID": "4-3-fair-revisited.html",
    "href": "4-3-fair-revisited.html",
    "title": "14¬† FAIR revisited",
    "section": "",
    "text": "The FAIR principles were among the first topics we touched in this course.\nNow, with all the knowledge gained since then, let‚Äôs revisit them: Do all the steps in project organization, computational workflows, and publishing bring us closer to FAIR or do they ‚Äújust‚Äù help us with making our work more reproducible? Can we apply FAIR principles also for our code?\n\nFAIR code\nThe FAIR principles can not only be used in the context of classical data. In particular, we discussed code as one of the key parts of our research projects besides data. The research software community has established, what the FAIR principles mean in the context of code and software (see Introducing the FAIR Principles for research software, 2022, Barker et al).\n\nF for Findable\nSoftware, and its associated metadata, is easy for both humans and machines to find.\n\nF1. Software is assigned a globally unique and persistent identifier.\n\nF1.1. Components of the software representing levels of granularity are assigned distinct identifiers.\nF1.2. Different versions of the software are assigned distinct identifiers.\n\nF2. Software is described with rich metadata.\nF3. Metadata clearly and explicitly include the identifier of the software they describe.\nF4. Metadata are FAIR, searchable and indexable.\n\n\n\nA for Accessible\nSoftware, and its metadata, is retrievable via standardised protocols.\n\nA1. Software is retrievable by its identifier using a standardised communications protocol.\n\nA1.1. The protocol is open, free, and universally implementable.\nA1.2. The protocol allows for an authentication and authorization procedure, where necessary.\n\nA2. Metadata are accessible, even when the software is no longer available.\n\n\n\nI for Interoperable\nSoftware interoperates with other software by exchanging data and/or metadata, and/or through interaction via application programming interfaces (APIs), described through standards.\n\nI1. Software reads, writes and exchanges data in a way that meets domain-relevant community standards.\nI2. Software includes qualified references to other objects.\n\n\n\nR for Reusable\nSoftware is both usable (can be executed) and reusable (can be understood, modified, built upon, or incorporated into other software).\n\nR1. Software is described with a plurality of accurate and relevant attributes.\n\nR1.1. Software is given a clear and accessible license.\nR1.2. Software is associated with detailed provenance.\n\nR2. Software includes qualified references to other software.\nR3. Software meets domain-relevant community standards.\n\n\n\n\nReproducbile research practices support FAIRness\nIn the following we want ot look at the practices we learned about and discuss, if the help us with FAIRness.\n\nProject organization\nIf your project is well organized with a nice folder structure, good names and documentation‚Ä¶\n\n‚Ä¶it is much easier (and less scary) to upload everything to a repository.\n‚Ä¶people will easily be able to understand the project and reuse parts or all of it.\n‚Ä¶you already have the needed metadata right at your fingertips.\n\n\n\nComputational workflows\nIf you use version control, stabilize your computing environment and maybe even automate your code‚Ä¶\n\n‚Ä¶you already have a git repository that you can easily publish, e.g.¬†on Zenodo.\n‚Ä¶your confidence in your work will be higher and you‚Äôll be more likely to share and promote your work.\n‚Ä¶it is easy for others to automatically produce the same results as you and thus reuse is improved.\n\n\n\nPublishing research outputs\nIf you have a clear license and publish your work‚Ä¶\n\n‚Ä¶you can get a DOI from the platform you published on.\n‚Ä¶others know what they are allowed to do with your materials.\n\n\n\nIn summary: FAIR and reproducible research go hand in hand\nThe cool thing about this course is, that you learned about reproducible research, but on the side you also learned how to make your work FAIR and maybe even open.\nIn the points above, we probaly even missed a few more that could be added. Any other points that come to your mind?"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "Summary",
    "section": "",
    "text": "I hope, you enjoyed this course as well as the booklet.\nIf you implement what you‚Äôve learned in your day to day research work, you will be among the top researchers when it comes to reproducibility.\nSo let‚Äôs go and do great research!\n\n\n\n\n\n\n\nReuse\n\n\n\nIf you want to reuse the course materials, you are welcome to do so. Please review our license information.\nYou can find the booklet source on GitHub."
  },
  {
    "objectID": "license.html",
    "href": "license.html",
    "title": "Booklet licence",
    "section": "",
    "text": "CC-BY 4.0\nUnless otherwise noted, all materials in this booklet are licensed under CC-BY 4.0 Heidi Seibold and the BERD Academy.\nThat means, if you reuse the booklet materials please cite it as follows (or similar):\n\n\n\n\n\n\nCitation\n\n\n\nBERD Course: Make Your Research Reproducible, 2023, Heidi Seibold, https://berd-nfdi.github.io/BERD-reproducible-research-course/, https://doi.org/10.17605/OSF.IO/RUPT7.\n\n\nThe course materials are available on OSF and GitHub."
  },
  {
    "objectID": "impressum.html#kontakt",
    "href": "impressum.html#kontakt",
    "title": "Impressum",
    "section": "Kontakt:",
    "text": "Kontakt:\nTelefon: +49 1517 0681105 E-Mail: heidi@heidiseibold.de"
  },
  {
    "objectID": "impressum.html#haftungsausschluss",
    "href": "impressum.html#haftungsausschluss",
    "title": "Impressum",
    "section": "Haftungsausschluss:",
    "text": "Haftungsausschluss:\n\nHaftung f√ºr Links\nUnser Angebot enth√§lt Links zu externen Webseiten Dritter, auf deren Inhalte wir keinen Einfluss haben. Deshalb k√∂nnen wir f√ºr diese fremden Inhalte auch keine Gew√§hr √ºbernehmen. F√ºr die Inhalte der verlinkten Seiten ist stets der jeweilige Anbieter oder Betreiber der Seiten verantwortlich. Die verlinkten Seiten wurden zum Zeitpunkt der Verlinkung auf m√∂gliche Rechtsverst√∂√üe √ºberpr√ºft. Rechtswidrige Inhalte waren zum Zeitpunkt der Verlinkung nicht erkennbar. Eine permanente inhaltliche Kontrolle der verlinkten Seiten ist jedoch ohne konkrete Anhaltspunkte einer Rechtsverletzung nicht zumutbar. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Links umgehend entfernen.\n\n\nUrheberrecht\nDie durch die Seitenbetreiber erstellten Inhalte und Werke auf diesen Seiten unterliegen dem deutschen Urheberrecht. Die Vervielf√§ltigung, Bearbeitung, Verbreitung und jede Art der Verwertung au√üerhalb der Grenzen des Urheberrechtes bed√ºrfen der schriftlichen Zustimmung des jeweiligen Autors bzw. Erstellers. Downloads und Kopien dieser Seite sind nur f√ºr den privaten, nicht kommerziellen Gebrauch gestattet. Soweit die Inhalte auf dieser Seite nicht vom Betreiber erstellt wurden, werden die Urheberrechte Dritter beachtet. Insbesondere werden Inhalte Dritter als solche gekennzeichnet. Sollten Sie trotzdem auf eine Urheberrechtsverletzung aufmerksam werden, bitten wir um einen entsprechenden Hinweis. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Inhalte umgehend entfernen.\n\n\nDatenschutz\nDie Nutzung unserer Webseite ist in der Regel ohne Angabe personenbezogener Daten m√∂glich. Soweit auf unseren Seiten personenbezogene Daten (beispielsweise Name, Anschrift oder eMail-Adressen) erhoben werden, erfolgt dies, soweit m√∂glich, stets auf freiwilliger Basis. Diese Daten werden ohne Ihre ausdr√ºckliche Zustimmung nicht an Dritte weitergegeben. Wir weisen darauf hin, dass die Daten√ºbertragung im Internet (z.B. bei der Kommunikation per E-Mail) Sicherheitsl√ºcken aufweisen kann. Ein l√ºckenloser Schutz der Daten vor dem Zugriff durch Dritte ist nicht m√∂glich. Der Nutzung von im Rahmen der Impressumspflicht ver√∂ffentlichten Kontaktdaten durch Dritte zur √úbersendung von nicht ausdr√ºcklich angeforderter Werbung und Informationsmaterialien wird hiermit ausdr√ºcklich widersprochen. Die Betreiber der Seiten behalten sich ausdr√ºcklich rechtliche Schritte im Falle der unverlangten Zusendung von Werbeinformationen, etwa durch Spam-Mails, vor.\nWebsite Impressum erstellt durch impressum-generator.de von der Kanzlei Hasselbach"
  }
]